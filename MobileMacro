local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")
local HttpService = game:GetService("HttpService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local gui = Instance.new("ScreenGui")
gui.Name = "KeyAutoPressGUI"
gui.ResetOnSpawn = false
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
gui.Parent = player:WaitForChild("PlayerGui")

local savedMacros = {}
local editorFrames = {}

local serverStartTime = os.time()
local playerJoinTime = os.time()

local frame2 = Instance.new("Frame")
frame2.Size = UDim2.new(0, 560, 0, 360)
frame2.Position = UDim2.new(0.5, -280, 0.5, -180)
frame2.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
frame2.BorderSizePixel = 0
frame2.Active = true
frame2.ZIndex = 10
frame2.Parent = gui
Instance.new("UICorner", frame2).CornerRadius = UDim.new(0, 12)

local title2 = Instance.new("TextLabel")
title2.Size = UDim2.new(1, -20, 0, 35)
title2.Position = UDim2.new(0, 10, 0, 5)
title2.BackgroundTransparency = 1
title2.Text = "Mobile Macro"
title2.Font = Enum.Font.GothamBold
title2.TextSize = 22
title2.TextColor3 = Color3.fromRGB(118, 185, 0)
title2.TextXAlignment = Enum.TextXAlignment.Left
title2.ZIndex = 11
title2.Parent = frame2

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -40, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
closeBtn.Text = "×"
closeBtn.TextColor3  = Color3.new(1, 1, 1)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 20
closeBtn.ZIndex = 12
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 8)
closeBtn.Parent = frame2

local toggleButton = Instance.new("ImageButton")
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(0, 10, 0, 10)
toggleButton.ZIndex = 100
toggleButton.Visible = true
toggleButton.Image = "rbxassetid://83262874928851"
Instance.new("UICorner", toggleButton).CornerRadius = UDim.new(0, 12)
toggleButton.Parent = gui

local function toggleGUI()
	frame2.Visible = not frame2.Visible
	for _,i in ipairs(editorFrames) do
		i.Visible = not i.Visible
	end
end

toggleButton.MouseButton1Click:Connect(toggleGUI)

closeBtn.MouseButton1Click:Connect(function()
	gui:Destroy()
end)

local tabContainer = Instance.new("Frame")
tabContainer.Size = UDim2.new(0.3, 0, 1, -50)
tabContainer.Position = UDim2.new(0, 0, 0, 45)
tabContainer.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
tabContainer.BorderSizePixel = 0
tabContainer.ZIndex = 11
tabContainer.Parent = frame2
Instance.new("UICorner", tabContainer).CornerRadius = UDim.new(0, 8)

local listLayout = Instance.new("UIListLayout")
listLayout.FillDirection = Enum.FillDirection.Vertical
listLayout.SortOrder = Enum.SortOrder.LayoutOrder
listLayout.Padding = UDim.new(0, 4)
listLayout.Parent = tabContainer

local pageContainer = Instance.new("Frame")
pageContainer.Size = UDim2.new(0.7, 0, 1, -50)
pageContainer.Position = UDim2.new(0.3, 0, 0, 45)
pageContainer.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
pageContainer.BorderSizePixel = 0
pageContainer.ZIndex = 11
pageContainer.Parent = frame2
Instance.new("UICorner", pageContainer).CornerRadius = UDim.new(0, 8)

local pages = {}
local buttons = {}

local function createPage(name)
	local page = Instance.new("Frame")
	page.Size = UDim2.new(1, 0, 1, 0)
	page.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
	page.Visible = false
	page.ZIndex = 12
	page.Parent = pageContainer
	pages[name] = page
	return page
end

local function createTab(text)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, 0, 0, 45)
	btn.Position = UDim2.new(0, 5, 0, 0)
	btn.Text = "  " .. text
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 20
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
	btn.BorderSizePixel = 0
	btn.ZIndex = 12
	btn.Parent = tabContainer
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
	buttons[text] = btn

	local page = createPage(text)

	btn.MouseEnter:Connect(function()
		if not page.Visible then
			btn.BackgroundColor3 = Color3.fromRGB(55, 65, 55)
		end
	end)
	btn.MouseLeave:Connect(function()
		if not page.Visible then
			btn.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
		end
	end)

	btn.MouseButton1Click:Connect(function()
		for name, p in pairs(pages) do
			p.Visible = false
		end
		for _, b in pairs(buttons) do
			b.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
		end
		btn.BackgroundColor3 = Color3.fromRGB(118, 185, 0)
		page.Visible = true
	end)

	return page
end

local macroPage = createTab("Macro")
local settingsPage = createTab("Settings")
local profilePage = createTab("Profile")

local addBtn = Instance.new("TextButton")
addBtn.Size = UDim2.new(0, 55, 0, 55)
addBtn.Position = UDim2.new(0.8, 0, 0.8, 0)
addBtn.BackgroundColor3 = Color3.fromRGB(118, 185, 0)
addBtn.BackgroundTransparency = 0.2
addBtn.Text = "+"
addBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
addBtn.TextSize = 37
addBtn.ZIndex = 13
addBtn.Parent = macroPage
Instance.new("UICorner", addBtn).CornerRadius = UDim.new(1, 0)

macroPage.Visible = true
buttons["Macro"].BackgroundColor3 = Color3.fromRGB(118, 185, 0)

local savedList = Instance.new("ScrollingFrame")
savedList.Size = UDim2.new(0.9, 0, 0.9, 0)
savedList.Position = UDim2.new(0.05, 0, 0.05, 0)
savedList.BackgroundTransparency = 1
savedList.ZIndex = 12
savedList.ScrollBarThickness = 6
savedList.CanvasSize = UDim2.new(0, 0, 0, 0)
savedList.Parent = macroPage

local gridLayout = Instance.new("UIGridLayout")
gridLayout.CellSize = UDim2.new(0.4, 0, 0.4, 0)
gridLayout.CellPadding = UDim2.new(0, 10, 0, 10)
gridLayout.FillDirection = Enum.FillDirection.Horizontal
gridLayout.SortOrder = Enum.SortOrder.LayoutOrder
gridLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	savedList.CanvasSize = UDim2.new(0, gridLayout.AbsoluteContentSize.X, 0, gridLayout.AbsoluteContentSize.Y + 10)
end)
gridLayout.Parent = savedList

local settingsList = Instance.new("Frame")
settingsList.Size = UDim2.new(1, 0, 1, 0)
settingsList.BackgroundTransparency = 1
settingsList.ZIndex = 12
settingsList.Parent = settingsPage

local settingsLayout = Instance.new("UIListLayout")
settingsLayout.FillDirection = Enum.FillDirection.Vertical
settingsLayout.SortOrder = Enum.SortOrder.LayoutOrder
settingsLayout.Padding = UDim.new(0, 10)
settingsLayout.Parent = settingsList

local profileList = Instance.new("Frame")
profileList.Size = UDim2.new(1, 0, 1, 0)
profileList.BackgroundTransparency = 1
profileList.ZIndex = 12
profileList.Parent = profilePage

local profileLayout = Instance.new("UIListLayout")
profileLayout.FillDirection = Enum.FillDirection.Vertical
profileLayout.SortOrder = Enum.SortOrder.LayoutOrder
profileLayout.Padding = UDim.new(0, 10)
profileLayout.Parent = profileList

local function makeDraggable(guiObject)
	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		guiObject.Position = UDim2.new(
			startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y
		)
	end

	guiObject.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = guiObject.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	guiObject.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

makeDraggable(frame2)
makeDraggable(toggleButton)

local function formatTime(seconds)
	local hours = math.floor(seconds / 3600)
	local minutes = math.floor((seconds % 3600) / 60)
	local secs = seconds % 60
	return string.format("%02d:%02d:%02d", hours, minutes, secs)
end

local PASTEBIN_DEV_KEY = "16ezoLoQR8Ju9KIG5sQXZqc_2g2U2L_e"  -- あなたのAPIキー
local PASTE_ID_FILE = "macro_paste_id.txt"  -- PCでも一時保存（次回高速ロード用）

-- ==============================
-- 3. HWID取得（Delta PC/iPad 対応）
-- ==============================
local function getDeviceHWID()
	if gethwid then
		local hwid = gethwid()
		if hwid and hwid ~= "" then return hwid end
	end
	if syn and syn.get_hwid then return syn.get_hwid() end
	if krnl and krnl.gethwid then return krnl.gethwid() end
	if typeof(gethwid) == "function" then return gethwid() end

	local ok, id = pcall(function()
		return game:GetService("RbxAnalyticsService"):GetClientId()
	end)
	return ok and id:gsub("-", "") or "unknown"
end

local DEVICE_HWID = getDeviceHWID()

local function saveToPastebin(data)
	if not HttpService.HttpEnabled then
		warn("HttpService が無効です")
		return false
	end

	local json = HttpService:JSONEncode(data)
	local url = "https://pastebin.com/api/api_post.php"
	local body = {
		api_dev_key = PASTEBIN_DEV_KEY,
		api_option = "paste",
		api_paste_code = json,
		api_paste_private = "1",
		api_paste_name = "Roblox_Macro_" .. DEVICE_HWID,
		api_paste_expire_date = "N"
	}

	local success, response = pcall(function()
		return HttpService:PostAsync(url, HttpService:UrlEncode(body), Enum.HttpContentType.ApplicationUrlEncoded)
	end)

	if success and response:find("pastebin.com/") then
		local pasteId = response:match("pastebin%.com/(%w+)")

		if writefile then
			writefile(PASTE_ID_FILE, pasteId)
		end
		print("Pastebin保存成功！ ID:", pasteId)
		return pasteId
	else
		warn("Pastebin保存失敗:", response)
		return false
	end
end

local function loadFromPastebin(pasteId)
	if not pasteId then return {} end
	local url = "https://pastebin.com/raw/" .. pasteId
	local success, json = pcall(function()
		return game:HttpGet(url)
	end)
	if success then
		local ok, data = pcall(HttpService.JSONDecode, HttpService, json)
		if ok then
			print("Pastebinから復元成功！")
			return data
		end
	end
	return {}
end

local pasteId = nil
if isfile and readfile and isfile(PASTE_ID_FILE) then
	pasteId = readfile(PASTE_ID_FILE)
end

local savedData = loadFromPastebin(pasteId)
local savedMacros = savedData.savedMacros or {}
getgenv().AntiAFK = savedData.antiAFK == true

local function autoSave()
	local data = {
		savedMacros = savedMacros,
		antiAFK = getgenv().AntiAFK,
	}
	local newId = saveToPastebin(data)
	if newId and writefile then
		writefile(PASTE_ID_FILE, newId)
	end
end

local function createProfileLabel(name, value)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(1, -10, 0, 30)
	frame.BackgroundTransparency = 0.5
	frame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	frame.Parent = profileList
	Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 13)

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, -20, 1, 0)
	label.Position = UDim2.new(0, 10, 0, 0)
	label.BackgroundTransparency = 1
	label.Text = name .. ": " .. tostring(value)
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Font = Enum.Font.GothamBold
	label.TextSize = 14
	label.TextColor3 = Color3.new(1, 1, 1)
	label.ZIndex = 13
	label.Parent = frame

	return label
end

local displayNameLabel = createProfileLabel("Display Name", player.DisplayName)
local nameLabel = createProfileLabel("Name", player.Name)
local userIdLabel = createProfileLabel("UserID", player.UserId)
local serverTimeLabel = createProfileLabel("Server Uptime", "00:00:00")
local joinTimeLabel = createProfileLabel("Time in Server", "00:00:00")
local joinIdLabel = createProfileLabel("Job ID", game.JobId)

RunService.Heartbeat:Connect(function()
	local currentTime = os.time()
	serverTimeLabel.Text = "Server Uptime: " .. formatTime(currentTime - serverStartTime)
	joinTimeLabel.Text = "Time in Server: " .. formatTime(currentTime - playerJoinTime)
end)

local function createSwitch(parent, text, default, callback)
	local frame = Instance.new("Frame", parent)
	frame.Size = UDim2.new(1, -10, 0, 30)
	frame.BackgroundTransparency = 0.5
	frame.BackgroundColor3 = Color3.new(0, 0, 0)
	local frameCorner = Instance.new("UICorner", frame)
	frameCorner.CornerRadius = UDim.new(0, 13)
	local label = Instance.new("TextLabel", frame)
	label.Size = UDim2.new(0.6, 0, 1, 0)
	label.Position = UDim2.new(0, 10, 0, 0)
	label.BackgroundTransparency = 1
	label.Text = text
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Font = Enum.Font.GothamBold
	label.TextSize = 14
	label.TextColor3 = Color3.new(1, 1, 1)
	local switchBase = Instance.new("Frame", frame)
	switchBase.Size = UDim2.new(0, 50, 0, 24)
	switchBase.Position = UDim2.new(1, -60, 0.5, -12)
	switchBase.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
	switchBase.BackgroundTransparency = 0.3
	switchBase.Name = "SwitchBase"
	local baseCorner = Instance.new("UICorner", switchBase)
	baseCorner.CornerRadius = UDim.new(1, 0)
	local handle = Instance.new("Frame", switchBase)
	handle.Size = UDim2.new(0, 20, 0, 20)
	handle.Position = UDim2.new(0, 2, 0.5, -10)
	handle.BackgroundColor3 = Color3.new(1, 1, 1)
	local handleCorner = Instance.new("UICorner", handle)
	handleCorner.CornerRadius = UDim.new(1, 0)
	local state = default or false
	local function updateUI()
		if state then
			switchBase.BackgroundColor3 = Color3.fromRGB(118, 185, 0)
			handle:TweenPosition(UDim2.new(1, -22, 0.5, -10), "Out", "Quad", 0.2, true)
		else
			switchBase.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
			handle:TweenPosition(UDim2.new(0, 2, 0.5, -10), "Out", "Quad", 0.2, true)
		end
	end
	switchBase.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 
			or input.UserInputType == Enum.UserInputType.Touch then
			state = not state
			updateUI()
			if callback then callback(state) end
		end
	end)
	updateUI()
	return frame
end

createSwitch(settingsList, "Anti Afk", false, function(state)
	getgenv().AntiAFK = state
end)

pcall(function()
	task.spawn(function()
		while wait(0.1) do
			if getgenv().AntiAFK then
				local vu = game:GetService("VirtualUser")
				player.Idled:Connect(function()
					vu:Button2Down(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
					wait(1)
					vu:Button2Up(Vector2.new(0,0), workspace.CurrentCamera.CFrame)
				end)
			end
		end
	end)
end)

local function createMacroCraft(editIndex)
	local frame = Instance.new("Frame")
	frame.Size = UDim2.new(0, 560, 0, 360)
	frame.Position = UDim2.new(0.5, -280, 0.5, -180)
	frame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
	frame.BorderSizePixel = 0
	frame.Active = true
	frame.ZIndex = 20
	frame.Parent = gui
	Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

	local title = Instance.new("TextLabel")
	title.Size = UDim2.new(1, -20, 0, 35)
	title.Position = UDim2.new(0, 10, 0, 5)
	title.BackgroundTransparency = 1
	title.Text = editIndex and "Edit Macro" or "Auto Key Macro"
	title.Font = Enum.Font.GothamBold
	title.TextSize = 22
	title.TextColor3 = Color3.fromRGB(255, 255, 255)
	title.TextXAlignment = Enum.TextXAlignment.Left
	title.ZIndex = 21
	title.Parent = frame

	local titleLabel = Instance.new("TextLabel")
	titleLabel.Size = UDim2.new(0.14, 0, 0, 30)
	titleLabel.Position = UDim2.new(0.5, 10, 0, 45)
	titleLabel.BackgroundTransparency = 1
	titleLabel.Text = "Title:"
	titleLabel.Font = Enum.Font.GothamBold
	titleLabel.TextSize = 16
	titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleLabel.TextXAlignment = Enum.TextXAlignment.Left
	titleLabel.ZIndex = 21
	titleLabel.Parent = frame

	local titleInput = Instance.new("TextBox")
	titleInput.Size = UDim2.new(0.37, 0, 0, 30)
	titleInput.Position = UDim2.new(0.6, 0, 0, 45)
	titleInput.PlaceholderText = "enter..."
	titleInput.Text = ""
	titleInput.Font = Enum.Font.Gotham
	titleInput.TextSize = 16
	titleInput.TextColor3 = Color3.fromRGB(255, 255, 255)
	titleInput.BackgroundColor3 = Color3.fromRGB(45, 45, 55)
	titleInput.ZIndex = 21
	Instance.new("UICorner", titleInput).CornerRadius = UDim.new(0, 6)
	titleInput.Parent = frame

	local listFrame = Instance.new("ScrollingFrame")
	listFrame.Size = UDim2.new(0.44, 0, 0.83, 0)
	listFrame.Position = UDim2.new(0.03, 0, 0.12, 0)
	listFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
	listFrame.ScrollBarThickness = 6
	listFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
	listFrame.ZIndex = 21
	Instance.new("UICorner", listFrame).CornerRadius = UDim.new(0, 8)
	listFrame.Parent = frame

	local layout = Instance.new("UIListLayout")
	layout.Padding = UDim.new(0, 5)
	layout.SortOrder = Enum.SortOrder.LayoutOrder
	layout.Parent = listFrame

	local keyInput = Instance.new("TextBox")
	keyInput.Size = UDim2.new(0.15, 0, 0, 30)
	keyInput.Position = UDim2.new(0.5, 0, 0.28, 0)
	keyInput.PlaceholderText = "ex: F"
	keyInput.Text = ""
	keyInput.Font = Enum.Font.Gotham
	keyInput.TextSize = 16
	keyInput.TextColor3 = Color3.new(1, 1, 1)
	keyInput.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
	keyInput.ZIndex = 21
	Instance.new("UICorner", keyInput).CornerRadius = UDim.new(0, 6)
	keyInput.Parent = frame

	local addKeyBtn = Instance.new("TextButton")
	addKeyBtn.Size = UDim2.new(0.28, 0, 0, 30)
	addKeyBtn.Position = UDim2.new(0.7, 0, 0.28, 0)
	addKeyBtn.Text = "Add Key"
	addKeyBtn.Font = Enum.Font.GothamBold
	addKeyBtn.TextSize = 16
	addKeyBtn.BackgroundColor3 = Color3.fromRGB(118, 185, 0)
	addKeyBtn.TextColor3 = Color3.new(1, 1, 1)
	addKeyBtn.ZIndex = 21
	Instance.new("UICorner", addKeyBtn).CornerRadius = UDim.new(0, 6)
	addKeyBtn.Parent = frame

	local delayInput = Instance.new("TextBox")
	delayInput.Size = UDim2.new(0.15, 0, 0, 30)
	delayInput.Position = UDim2.new(0.5, 0, 0.4, 0)
	delayInput.PlaceholderText = "ex: 1.5"
	delayInput.Text = ""
	delayInput.Font = Enum.Font.Gotham
	delayInput.TextSize = 16
	delayInput.TextColor3 = Color3.new(1, 1, 1)
	delayInput.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
	delayInput.ZIndex = 21
	Instance.new("UICorner", delayInput).CornerRadius = UDim.new(0, 6)
	delayInput.Parent = frame

	local addWaitBtn = Instance.new("TextButton")
	addWaitBtn.Size = UDim2.new(0.28, 0, 0, 30)
	addWaitBtn.Position = UDim2.new(0.7, 0, 0.4, 0)
	addWaitBtn.Text = "Add Wait"
	addWaitBtn.Font = Enum.Font.GothamBold
	addWaitBtn.TextSize = 16
	addWaitBtn.BackgroundColor3 = Color3.fromRGB(118, 185, 0)
	addWaitBtn.TextColor3 = Color3.new(1, 1, 1)
	addWaitBtn.ZIndex = 21
	Instance.new("UICorner", addWaitBtn).CornerRadius = UDim.new(0, 6)
	addWaitBtn.Parent = frame

	local modeLabel = Instance.new("TextLabel")
	modeLabel.Size = UDim2.new(0, 100, 0, 30)
	modeLabel.Position = UDim2.new(0, 270, 0, 190)
	modeLabel.BackgroundTransparency = 1
	modeLabel.Text = "Mode:"
	modeLabel.Font = Enum.Font.GothamBold
	modeLabel.TextSize = 18
	modeLabel.TextColor3 = Color3.new(1, 1, 1)
	modeLabel.ZIndex = 21
	modeLabel.Parent = frame

	local selectedMode = "hold"

	local holdBtn = Instance.new("TextButton")
	holdBtn.Size = UDim2.new(0, 90, 0, 30)
	holdBtn.Position = UDim2.new(0, 360, 0, 190)
	holdBtn.Text = "Hold"
	holdBtn.Font = Enum.Font.GothamBold
	holdBtn.TextSize = 16
	holdBtn.TextColor3 = Color3.new(1, 1, 1)
	holdBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
	holdBtn.ZIndex = 21
	Instance.new("UICorner", holdBtn).CornerRadius = UDim.new(0, 6)
	holdBtn.Parent = frame

	local toggleBtn = Instance.new("TextButton")
	toggleBtn.Size = UDim2.new(0, 90, 0, 30)
	toggleBtn.Position = UDim2.new(0, 460, 0, 190)
	toggleBtn.Text = "Toggle"
	toggleBtn.Font = Enum.Font.GothamBold
	toggleBtn.TextSize = 16
	toggleBtn.TextColor3 = Color3.new(1, 1, 1)
	toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
	toggleBtn.ZIndex = 21
	Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(0, 6)
	toggleBtn.Parent = frame
	
	local function updateModeButtons()
		if selectedMode == "hold" then
			holdBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
			toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
		else
			holdBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
			toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
		end
	end

	holdBtn.MouseButton1Click:Connect(function()
		selectedMode = "hold"
		updateModeButtons()
	end)

	toggleBtn.MouseButton1Click:Connect(function()
		selectedMode = "toggle"
		updateModeButtons()
	end)
	
	local sequence = {}
	local itemDataMap = {}

	if editIndex then
		local macroData = savedMacros[editIndex]
		titleInput.Text = macroData.title
		sequence = table.clone(macroData.sequence)
		selectedMode = macroData.mode
		updateModeButtons()
	end

	local function showWarning(message)
		local warning = Instance.new("TextLabel")
		warning.Size = UDim2.new(0.4, 0, 0, 30)
		warning.Position = UDim2.new(0.5, 0, 0.1, 0)
		warning.Text = message
		warning.TextColor3 = Color3.fromRGB(255, 100, 100)
		warning.BackgroundTransparency = 1
		warning.Font = Enum.Font.Gotham
		warning.TextSize = 16
		warning.ZIndex = 22
		warning.Parent = frame
		task.spawn(function()
			task.wait(2)
			warning:Destroy()
		end)
	end

	local function updateList()
		for _, c in ipairs(listFrame:GetChildren()) do
			if c:IsA("Frame") then
				itemDataMap[c] = nil
				c:Destroy()
			end
		end

		for i, item in ipairs(sequence) do
			local displayMap = {
				["Zero"] = "0", ["One"] = "1", ["Two"] = "2", ["Three"] = "3", ["Four"] = "4",
				["Five"] = "5", ["Six"] = "6", ["Seven"] = "7", ["Eight"] = "8", ["Nine"] = "9",
				["Space"] = "Space"
			}

			local keyName
			if typeof(item.value) == "EnumItem" then
				keyName = displayMap[item.value.Name] or item.value.Name
			else
				keyName = tostring(item.value)
			end

			local index = i
			local itemFrame = Instance.new("Frame")
			itemFrame.Size = UDim2.new(1, -10, 0, 28)
			itemFrame.BackgroundColor3 = Color3.fromRGB(55, 55, 65)
			itemFrame.LayoutOrder = i
			itemFrame.ZIndex = 22
			itemFrame.Parent = listFrame
			Instance.new("UICorner", itemFrame).CornerRadius = UDim.new(0, 6)

			local numLabel = Instance.new("TextLabel")
			numLabel.Size = UDim2.new(0, 30, 1, 0)
			numLabel.Position = UDim2.new(0, 0, 0, 0)
			numLabel.BackgroundTransparency = 1
			numLabel.Text = tostring(i)
			numLabel.TextSize = 14
			numLabel.Font = Enum.Font.RobotoMono
			numLabel.TextColor3 = Color3.new(1, 1, 1)
			numLabel.ZIndex = 23
			numLabel.Parent = itemFrame

			local text = Instance.new("TextLabel")
			text.Size = UDim2.new(1, -120, 1, 0)
			text.Position = UDim2.new(0, 35, 0, 0)
			text.BackgroundTransparency = 1
			text.Text = item.type == "keydown" and ("KeyDown:" .. keyName)
				or item.type == "keyup" and ("KeyUp:" .. keyName)
				or ("Wait:" .. keyName .. "s")
			text.TextSize = 14
			text.Font = Enum.Font.RobotoMono
			text.TextColor3 = Color3.new(1, 1, 1)
			text.TextXAlignment = Enum.TextXAlignment.Left
			text.ZIndex = 23
			text.Parent = itemFrame

			local up = Instance.new("TextButton")
			up.Size = UDim2.new(0, 20, 0, 20)
			up.Position = UDim2.new(1, -70, 0.5, -10)
			up.Text = "↑"
			up.TextSize = 22
			up.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
			up.TextColor3 = Color3.new(1, 1, 1)
			up.Font = Enum.Font.RobotoMono
			up.ZIndex = 23
			up.Parent = itemFrame
			up.MouseButton1Click:Connect(function()
				if index > 1 then
					table.insert(sequence, index - 1, table.remove(sequence, index))
					updateList()
				end
			end)

			local down = Instance.new("TextButton")
			down.Size = UDim2.new(0, 20, 0, 20)
			down.Position = UDim2.new(1, -45, 0.5, -10)
			down.Text = "↓"
			down.TextSize = 22
			down.BackgroundColor3 = Color3.fromRGB(67, 67, 67)
			down.TextColor3 = Color3.new(1, 1, 1)
			down.Font = Enum.Font.RobotoMono
			down.ZIndex = 23
			down.Parent = itemFrame
			down.MouseButton1Click:Connect(function()
				if index < #sequence then
					table.insert(sequence, index + 1, table.remove(sequence, index))
					updateList()
				end
			end)

			local del = Instance.new("TextButton")
			del.Size = UDim2.new(0, 20, 0, 20)
			del.Position = UDim2.new(1, -20, 0.5, -10)
			del.Text = "×"
			del.TextSize = 22
			del.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
			del.TextColor3 = Color3.new(1, 1, 1)
			del.Font = Enum.Font.RobotoMono
			del.ZIndex = 23
			del.Parent = itemFrame
			del.MouseButton1Click:Connect(function()
				table.remove(sequence, index)
				updateList()
			end)
		end
		listFrame.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
	end

	local function parseKey(input)
		input = input:upper()
		if input == " " then
			return Enum.KeyCode.Space
		end

		local numMap = {
			["0"] = "Zero",
			["1"] = "One",
			["2"] = "Two",
			["3"] = "Three",
			["4"] = "Four",
			["5"] = "Five",
			["6"] = "Six",
			["7"] = "Seven",
			["8"] = "Eight",
			["9"] = "Nine",
		}

		if numMap[input] then
			return Enum.KeyCode[numMap[input]]
		elseif Enum.KeyCode[input] then
			return Enum.KeyCode[input]
		end

		return nil
	end

	addKeyBtn.MouseButton1Click:Connect(function()
		local key = parseKey(keyInput.Text)
		if not key then
			showWarning("無効なキーです")
			return
		end

		local confirmGui = Instance.new("ScreenGui")
		confirmGui.Name = "KeyConfirmGUI"
		confirmGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
		confirmGui.Parent = player.PlayerGui

		local confirmFrame = Instance.new("Frame")
		confirmFrame.Size = UDim2.new(0, 250, 0, 120)
		confirmFrame.Position = UDim2.new(0.5, -125, 0.5, -60)
		confirmFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
		confirmFrame.ZIndex = 30
		confirmFrame.Parent = confirmGui
		Instance.new("UICorner", confirmFrame).CornerRadius = UDim.new(0, 8)

		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, 0, 0, 40)
		label.Position = UDim2.new(0, 0, 0, 10)
		label.BackgroundTransparency = 1
		label.Text = "Please choose"
		label.TextColor3 = Color3.new(1, 1, 1)
		label.TextSize = 16
		label.Font = Enum.Font.GothamBold
		label.ZIndex = 31
		label.Parent = confirmFrame

		local downBtn = Instance.new("TextButton")
		downBtn.Size = UDim2.new(0.8, 0, 0, 30)
		downBtn.Position = UDim2.new(0.1, 0, 0.45, 0)
		downBtn.Text = "KeyDown"
		downBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
		downBtn.TextColor3 = Color3.new(1, 1, 1)
		downBtn.ZIndex = 31
		Instance.new("UICorner", downBtn).CornerRadius = UDim.new(0, 6)
		downBtn.Parent = confirmFrame
		downBtn.MouseButton1Click:Connect(function()
			table.insert(sequence, { type = "keydown", value = key })
			updateList()
			confirmGui:Destroy()
			keyInput.Text = ""
		end)

		local upBtn = Instance.new("TextButton")
		upBtn.Size = UDim2.new(0.8, 0, 0, 30)
		upBtn.Position = UDim2.new(0.1, 0, 0.75, 0)
		upBtn.Text = "KeyUp"
		upBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
		upBtn.TextColor3 = Color3.new(1, 1, 1)
		upBtn.ZIndex = 31
		Instance.new("UICorner", upBtn).CornerRadius = UDim.new(0, 6)
		upBtn.Parent = confirmFrame
		upBtn.MouseButton1Click:Connect(function()
			table.insert(sequence, { type = "keyup", value = key })
			updateList()
			confirmGui:Destroy()
			keyInput.Text = ""
		end)
	end)

	addWaitBtn.MouseButton1Click:Connect(function()
		local w = tonumber(delayInput.Text)
		if w and w > 0 then
			table.insert(sequence, { type = "wait", value = w })
			delayInput.Text = ""
			updateList()
		else
			showWarning("有効な秒数を入力してください")
		end
	end)

	updateList()

	local saveBtn = Instance.new("TextButton")
	saveBtn.Size = UDim2.new(0.35, 0, 0, 40)
	saveBtn.Position = UDim2.new(0.6, 0, 0.85, 0)
	saveBtn.Text = "Save"
	saveBtn.Font = Enum.Font.GothamBold
	saveBtn.TextSize = 18
	saveBtn.BackgroundColor3 = Color3.fromRGB(118, 185, 0)
	saveBtn.TextColor3 = Color3.new(1, 1, 1)
	saveBtn.ZIndex = 21
	Instance.new("UICorner", saveBtn).CornerRadius = UDim.new(0, 8)
	saveBtn.Parent = frame

	local backBtn = Instance.new("TextButton")
	backBtn.Size = UDim2.new(0, 70, 0, 30)
	backBtn.Position = UDim2.new(0, 480, 0, 5)
	backBtn.Text = "← Back"
	backBtn.Font = Enum.Font.GothamBold
	backBtn.TextSize = 18
	backBtn.TextColor3 = Color3.new(1, 1, 1)
	backBtn.BackgroundColor3 = Color3.fromRGB(118, 185, 0)
	backBtn.ZIndex = 21
	Instance.new("UICorner", backBtn).CornerRadius = UDim.new(0, 6)
	backBtn.Parent = frame

	backBtn.MouseButton1Click:Connect(function()
		frame:Destroy()
	end)

	makeDraggable(frame)

	saveBtn.MouseButton1Click:Connect(function()
		if #sequence == 0 then
			showWarning("マクロが空です")
			return
		end

		local titleText = titleInput.Text ~= "" and titleInput.Text or "Untitled"
		local macroData = {
			title = titleText,
			sequence = table.clone(sequence),
			mode = selectedMode,
		}

		if editIndex then
			savedMacros[editIndex] = macroData
			showWarning("マクロを更新しました！")
		else
			table.insert(savedMacros, macroData)
			showWarning("マクロを保存しました！")
		end

		-- savedListをクリアして再描画
		for _, child in ipairs(savedList:GetChildren()) do
			if child:IsA("Frame") then
				child:Destroy()
			end
		end

		-- 保存したマクロを再描画
		for i, mData in ipairs(savedMacros) do
			local macroFrame = Instance.new("Frame")
			macroFrame.BackgroundColor3 = Color3.fromRGB(86, 86, 97)
			macroFrame.ZIndex = 13
			macroFrame.Parent = savedList
			Instance.new("UICorner", macroFrame).CornerRadius = UDim.new(0, 8)

			local titleLabel = Instance.new("TextLabel")
			titleLabel.Size = UDim2.new(0.6, 0, 0.3, 0)
			titleLabel.Position = UDim2.new(0, 10, 0, 0)
			titleLabel.BackgroundTransparency = 1
			titleLabel.Text = mData.title
			titleLabel.Font = Enum.Font.GothamBold
			titleLabel.TextSize = 18
			titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
			titleLabel.TextXAlignment = Enum.TextXAlignment.Left
			titleLabel.ZIndex = 14
			titleLabel.Parent = macroFrame

			local deleteBtn = Instance.new("TextButton")
			deleteBtn.Size = UDim2.new(0, 20, 0, 20)
			deleteBtn.Position = UDim2.new(0.83, 0, 0.05, 0)
			deleteBtn.Text = "×"
			deleteBtn.Font = Enum.Font.GothamBold
			deleteBtn.TextSize = 20
			deleteBtn.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
			deleteBtn.TextColor3 = Color3.new(1, 1, 1)
			deleteBtn.ZIndex = 14
			Instance.new("UICorner", deleteBtn).CornerRadius = UDim.new(1, 0)
			deleteBtn.Parent = macroFrame

			deleteBtn.MouseButton1Click:Connect(function()
				table.remove(savedMacros, i)
				macroFrame:Destroy()
			end)

			local editBtn = Instance.new("TextButton")
			editBtn.Size = UDim2.new(0.3, 0, 0.2, 0)
			editBtn.Position = UDim2.new(0.35, 0, 0.75, 0)
			editBtn.Text = "Edit"
			editBtn.Font = Enum.Font.GothamBold
			editBtn.TextSize = 18
			editBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 255)
			editBtn.TextColor3 = Color3.new(1, 1, 1)
			editBtn.ZIndex = 14
			Instance.new("UICorner", editBtn).CornerRadius = UDim.new(1, 0)
			editBtn.Parent = macroFrame

			editBtn.MouseButton1Click:Connect(function()
				createMacroCraft(i)
			end)

			local playBtn = Instance.new("TextButton")
			playBtn.Size = UDim2.new(0.3, 0, 0.2, 0)
			playBtn.Position = UDim2.new(0.65, 0, 0.75, 0)
			playBtn.Text = "Run"
			playBtn.Font = Enum.Font.GothamBold
			playBtn.TextSize = 18
			playBtn.BackgroundColor3 = Color3.fromRGB(118, 185, 0)
			playBtn.TextColor3 = Color3.new(1, 1, 1)
			playBtn.ZIndex = 14
			Instance.new("UICorner", playBtn).CornerRadius = UDim.new(1, 0)
			playBtn.Parent = macroFrame

			playBtn.MouseButton1Click:Connect(function()
				local function runMacro(data)
					local switchGui = Instance.new("ScreenGui", player.PlayerGui)
					switchGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
					local btn = Instance.new("TextButton")
					btn.Size = UDim2.new(0, 200, 0, 70)
					btn.Position = UDim2.new(0.5, -100, 0.9, 0)
					btn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
					btn.Text = data.title .. "\n[OFF]"
					btn.Font = Enum.Font.GothamBold
					btn.TextSize = 20
					btn.TextColor3 = Color3.new(1, 1, 1)
					btn.ZIndex = 30
					Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 10)
					btn.Parent = switchGui

					local close = Instance.new("TextButton")
					close.Size = UDim2.new(0, 25, 0, 25)
					close.Position = UDim2.new(1, -30, 0, 5)
					close.Text = "×"
					close.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
					close.TextColor3 = Color3.new(1, 1, 1)
					close.ZIndex = 31
					Instance.new("UICorner", close).CornerRadius = UDim.new(0, 5)
					close.Parent = btn
					close.MouseButton1Click:Connect(function() switchGui:Destroy() end)

					makeDraggable(btn)
					
					local hasWait = false
					for _, v in ipairs(data.sequence) do
						if v.type == "wait" then
							hasWait = true
							break
						end
					end
					
					if data.mode == "toggle" then
						local active = false
						btn.MouseButton1Click:Connect(function()
							active = not active
							btn.Text = data.title .. (active and "\n[ON]" or "\n[OFF]")
							btn.BackgroundColor3 = active and Color3.fromRGB(0, 120, 255) or Color3.fromRGB(60, 60, 70)
							if active then
								task.spawn(function()
									while active do
										for _, v in ipairs(data.sequence) do
											if not active then break end
											if v.type == "keydown" then
												VirtualInputManager:SendKeyEvent(true, v.value, false, game)
											elseif v.type == "keyup" then
												VirtualInputManager:SendKeyEvent(false, v.value, false, game)
											elseif v.type == "wait" then
												task.wait(v.value)
											end
											if not hasWait then
												task.wait(0.02)
											end
										end
									end
								end)
							end
						end)
					else
						local isHolding = false
						local holdThread

						btn.MouseButton1Down:Connect(function()
							if isHolding then return end
							isHolding = true

							btn.Text = data.title .. "\n[ON]"
							btn.BackgroundColor3 = Color3.fromRGB(0, 120, 255)

							task.spawn(function()
								while isHolding do
									for _, v in ipairs(data.sequence) do
										if not isHolding then break end 

										if v.type == "keydown" then
											VirtualInputManager:SendKeyEvent(true, v.value, false, game)
										elseif v.type == "keyup" then
											VirtualInputManager:SendKeyEvent(false, v.value, false, game)
										elseif v.type == "wait" then
											task.wait(v.value)
										end

										if not hasWait then
											task.wait(0.02)
										end
									end
								end
							end)
						end)

						btn.MouseButton1Up:Connect(function()
							isHolding = false
							btn.Text = data.title .. "\n[OFF]"
							btn.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
						end)
					end
				end
				runMacro(mData)
			end)
			
		end
		autoSave()
		frame:Destroy()
	end)
	updateList()
	return frame
end

addBtn.MouseButton1Click:Connect(function()
	table.insert(editorFrames,createMacroCraft())
end)
